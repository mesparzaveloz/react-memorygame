{"ast":null,"code":"var _jsxFileName = \"C:\\\\MEV\\\\ITESM\\\\Deliverables\\\\T19\\\\mem_game\\\\src\\\\App.js\";\n//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport FriendCard from \"./components/FriendCard\";\nimport Footer from \"./components/Footer\";\nimport fish from \"./fish.json\";\nimport \"./App.css\"; //sets state to 0 or empty\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fish,\n      clickedFish: [],\n      score: 0\n    };\n\n    this.imageClick = event => {\n      const currentFish = event.target.alt;\n      const FishAlreadyClicked = this.state.clickedFish.indexOf(currentFish) > -1; //if you click on a fish that has already been selected, the game is reset and cards reordered\n\n      if (FishAlreadyClicked) {\n        this.setState({\n          fish: this.state.fish.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFish: [],\n          score: 0\n        });\n        alert(\"You lose. Play again?\"); //if you click on an available fish, your score is increased and cards reordered\n      } else {\n        this.setState({\n          fish: this.state.fish.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFish: this.state.clickedFish.concat(currentFish),\n          score: this.state.score + 1\n        }, //if you get all 12 fish corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              fish: this.state.fish.sort(function (a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedFish: [],\n              score: 0\n            });\n          }\n        });\n      }\n    };\n  }\n\n  //the order of components to be rendered: navbar, jumbotron, friendcard, footer \n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.fish.map(fish => React.createElement(FriendCard, {\n      imageClick: this.imageClick,\n      id: fish.id,\n      key: fish.id,\n      image: fish.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\MEV\\ITESM\\Deliverables\\T19\\mem_game\\src\\App.js"],"names":["React","Component","Navbar","Jumbotron","FriendCard","Footer","fish","App","state","clickedFish","score","imageClick","event","currentFish","target","alt","FishAlreadyClicked","indexOf","setState","sort","a","b","Math","random","alert","concat","render","map","id","image"],"mappings":"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","sourcesContent":["//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport FriendCard from \"./components/FriendCard\";\nimport Footer from \"./components/Footer\";\nimport fish from \"./fish.json\";\nimport \"./App.css\";\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    fish,\n    clickedFish: [],\n    score: 0\n  };\n\n//when you click on a card ... the fish is taken out of the array\n  imageClick = event => {\n    const currentFish = event.target.alt;\n    const FishAlreadyClicked =\n      this.state.clickedFish.indexOf(currentFish) > -1;\n\n//if you click on a fish that has already been selected, the game is reset and cards reordered\n    if (FishAlreadyClicked) {\n      this.setState({\n        fish: this.state.fish.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedFish: [],\n        score: 0\n      });\n        alert(\"You lose. Play again?\");\n\n//if you click on an available fish, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          fish: this.state.fish.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFish: this.state.clickedFish.concat(\n            currentFish\n          ),\n          score: this.state.score + 1\n        },\n//if you get all 12 fish corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              fish: this.state.fish.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedFish: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n//the order of components to be rendered: navbar, jumbotron, friendcard, footer \n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.fish.map(fish => (\n            <FriendCard\n              imageClick={this.imageClick}\n              id={fish.id}\n              key={fish.id}\n              image={fish.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}